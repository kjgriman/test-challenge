#!/bin/bash

# Script para configurar HTTPS en desarrollo

echo "ðŸ”’ Configurando HTTPS para desarrollo local..."

# Crear archivo .env con configuraciÃ³n HTTPS
cat > .env << 'EOF'
# ðŸš€ ConfiguraciÃ³n del Backend - Variables de Entorno

# Base de datos MongoDB
MONGODB_URI=mongodb+srv://kjgriman:test123@cluster0.mongodb.net/speech-therapy?retryWrites=true&w=majority

# AutenticaciÃ³n JWT
JWT_SECRET=your-super-secret-jwt-key-here
JWT_EXPIRES_IN=24h

# ConfiguraciÃ³n del servidor
PORT=3001
NODE_ENV=development
USE_HTTPS=true

# URLs de la aplicaciÃ³n
FRONTEND_URL=https://localhost:5173
BACKEND_URL=https://localhost:3001

# ConfiguraciÃ³n de CORS
CORS_ORIGIN=https://localhost:5173

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# Logging
LOG_LEVEL=debug

# ConfiguraciÃ³n de WebSockets
SOCKET_CORS_ORIGIN=https://localhost:5173

# ConfiguraciÃ³n de seguridad
BCRYPT_ROUNDS=12

# ConfiguraciÃ³n de sesiones (si usas express-session)
SESSION_SECRET=your-session-secret-key

# ConfiguraciÃ³n de archivos (si implementas uploads)
MAX_FILE_SIZE=10485760
UPLOAD_PATH=./uploads

# ConfiguraciÃ³n de email (si implementas notificaciones)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password

# ConfiguraciÃ³n de IA (para resÃºmenes automÃ¡ticos)
OPENAI_API_KEY=your-openai-api-key
OPENAI_MODEL=gpt-3.5-turbo

# ConfiguraciÃ³n de videollamadas (si usas servicios externos)
AGORA_APP_ID=your-agora-app-id
AGORA_APP_CERTIFICATE=your-agora-certificate

# ConfiguraciÃ³n de monitoreo (opcional)
SENTRY_DSN=your-sentry-dsn
EOF

echo "âœ… Archivo .env configurado con HTTPS"
echo "ðŸ”’ Certificados SSL ya generados"
echo "ðŸš€ Listo para ejecutar con HTTPS"
